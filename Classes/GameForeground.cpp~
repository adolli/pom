#include "GameForeground.h"

USING_NS_CC;


// on "init" you need to initialize your instance
bool GameForeground::init()
{
    //////////////////////////////
    // 1. super init first
    if ( !Layer::init() )
    {
        return false;
    }
    
    Size visibleSize = Director::getInstance()->getVisibleSize();
    Vec2 origin = Director::getInstance()->getVisibleOrigin();

    /////////////////////////////
    // 2. add a menu item with "X" image, which is clicked to quit the program
    //    you may modify it.

    // add a "close" icon to exit the progress. it's an autorelease object
    auto closeItem = MenuItemImage::create(
                                           "CloseNormal.png",
                                           "CloseSelected.png",
                                           CC_CALLBACK_1(GameForeground::menuCloseCallback, this));
    
	closeItem->setPosition(Vec2(origin.x + visibleSize.width - closeItem->getContentSize().width/2 ,
                                origin.y + closeItem->getContentSize().height/2));

    auto leftButtonLabel = LabelTTF::create("Left", "Arial", 24);
    auto leftButton = MenuItemLabel::create(leftButtonLabel, CC_CALLBACK_1(GameForeground::leftButtonCallback, this));
    leftButton->setPosition(Point(origin.x + visibleSize.width - leftButton->getContentSize().width/2 ,
                                  origin.y + 48));
    auto rightButtonLabel = LabelTTF::create("Right", "Arial", 24);
    auto rightButton = MenuItemLabel::create(rightButtonLabel, CC_CALLBACK_1(GameForeground::rightButtonCallback, this));
    rightButton->setPosition(Point(origin.x + visibleSize.width - rightButton->getContentSize().width/2 ,
                                   origin.y + 48 + 48));

    // create menu, it's an autorelease object
    auto menu = Menu::create(closeItem, leftButton, rightButton, NULL);
    menu->setPosition(Vec2::ZERO);
    this->addChild(menu, 1);

    /////////////////////////////
    // 3. add your codes below...

    // add a label shows "Hello World"
    // create and initialize a label
    
    auto label = LabelTTF::create("Dango Pom!", "Arial", 24);
    
    Point rightEnd = Point(origin.x + visibleSize.width - label->getContentSize().width / 2,
                           origin.y + visibleSize.height - label->getContentSize().height);
    Point leftEnd = Point(origin.x + label->getContentSize().width / 2, 
                          origin.y + visibleSize.height - label->getContentSize().height);
    label->setPosition(Vec2(origin.x + visibleSize.width - label->getContentSize().width / 2,
                            origin.y + visibleSize.height - label->getContentSize().height));
    //label->setOpacity(0);
    auto fadeIn = FadeIn::create(1.0f);
    auto moveToRight = MoveTo::create(4.0f, rightEnd);
    auto moveToLeft = MoveTo::create(4.0f, leftEnd);
    auto sequenceAct = Sequence::create(moveToLeft, moveToRight, NULL);
    label->runAction(RepeatForever::create(sequenceAct));

    // add the label as a child to this layer
    this->addChild(label, 1);

    // add "HelloWorld" splash screen"
    auto sprite = Sprite::create("foreground.png");

    // position the sprite on the center of the screen
    sprite->setPosition(Vec2(visibleSize.width/2 + origin.x, visibleSize.height/2 + origin.y));

    // add the sprite as a child to this layer
    this->addChild(sprite, 0);
    
    return true;
}


void GameForeground::menuCloseCallback(Ref* pSender)
{
#if (CC_TARGET_PLATFORM == CC_PLATFORM_WP8) || (CC_TARGET_PLATFORM == CC_PLATFORM_WINRT)
	MessageBox("You pressed the close button. Windows Store Apps do not implement a close button.","Alert");
    return;
#endif

    Director::getInstance()->end();

#if (CC_TARGET_PLATFORM == CC_PLATFORM_IOS)
    exit(0);
#endif
}


void GameForeground::leftButtonCallback(Ref* sender)
{
    
}

void GameForeground::rightButtonCallback(Ref* sender)
{
    
}




